{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","cardList","robots","map","user","i","components_Card","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","App","onSearchChange","event","searchField","target","value","_this2","fetch","then","response","json","users","_this$state","filteredRobots","filter","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_ErrorBoundary","CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_containers_App"],"mappings":"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","file":"static/js/main.2851227b.chunk.js","sourcesContent":["import React from \"react\"\r\nimport \"tachyons\"\r\n\r\n\r\nconst Card = ({name, email, id}) => {\r\n    return(\r\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw3 shadow-5\">\r\n            <img alt=\"robot\" src={`https://robohash.org/${id}?200*200`}/>\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react'\r\nimport Card from './Card'\r\n\r\nconst cardList = ({robots}) => {\r\nreturn(\r\n    <div>\r\n        {robots.map((user, i) => {\r\n        return  <Card \r\n                key={robots[i].id}\r\n                id={robots[i].id} \r\n                name={robots[i].name} \r\n                email={robots[i].email} />\r\n            })}\r\n    </div>\r\n)}\r\n\r\nexport default cardList;","import React from 'react'\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n    return(\r\n        <div className='pa2'>\r\n            <input \r\n            className='pa3 ba b--green bg-lightest-blue'\r\n            type='search'\r\n            placeholder='Search robots'\r\n            onChange={searchChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div style={{overflowY: 'scroll', border: '1px solid black', height:'800px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll","import React, {Component} from 'react'\r\n\r\nclass ErrorBoundary extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {hasError: false}\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Oooops... seems like something went wrong</h1>\r\n        }else{\r\n            return this.props.children\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, {Component} from 'react'\r\nimport CardList from '../components/CardList'\r\nimport SearchBox from '../components/SearchBox'\r\nimport Scroll from '../components/Scroll'\r\nimport ErrorBoundary from '../components/ErrorBoundary'\r\nimport './App.css'\r\n\r\nclass App extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state= {\r\n            robots: [],\r\n            searchField: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => this.setState({robots: users}))\r\n    }\r\n\r\n    onSearchChange= (event) => {\r\n        this.setState({\r\n            searchField: event.target.value\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const {robots, searchField} = this.state\r\n        const filteredRobots = robots.filter(robots => {\r\n            return robots.name.toLowerCase().includes(searchField.toLowerCase())\r\n        })\r\n    return(\r\n            (!robots.length)? \r\n            <h1>LOADING</h1>:\r\n            (\r\n                <div className='tc'>\r\n                    <h1 className='f1'>RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange} />\r\n                    <Scroll>\r\n                        <ErrorBoundary>\r\n                            <CardList robots={filteredRobots}/>\r\n                        </ErrorBoundary>\r\n                    </Scroll>\r\n                </div>\r\n            )   \r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}